{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "SimpleAWSS3BuildDeployArtefacts": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "simpleawss3builddeployartefacts"
      }
    },
    "PipelineLogs": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "SimpleAWSTest50BuildDeployPipelineLogs"
      }
    },
    "S3ArtefactAccessPolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:Get*",
                "s3:List*",
                "s3:Describe"
              ],
              "Effect": "Allow",
              "Resource": [{"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},
                {"Fn::Join": ["",[ {"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},"/*" ]]}]
            }
          ]
        },
        "PolicyName": "S3ArtefactAccessPolicy",
        "Roles": [
          {
            "Ref": "ServiceRoleForEC2Instances"
          }
        ]
      }
    },
    "S3ArtefactAccessPolicyFuller": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "s3:*"
              ],
              "Effect": "Allow",
              "Resource": [{"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},
                {"Fn::Join": ["",[ {"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},"/*" ]]}]
            }
          ]
        },
        "PolicyName": "S3ArtefactAccessPolicyFuller",
        "Roles": [
          {
            "Ref": "ServiceRoleForCodeDeploy"
          },
          {
            "Ref": "ServiceRoleForEC2Instances"
          }
        ]
      }
    },
    "ParameterStoreAccess": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "ssm:DescribeAssociation",
                "ssm:GetDeployablePatchSnapshotForInstance",
                "ssm:GetDocument",
                "ssm:DescribeDocument",
                "ssm:GetManifest",
                "ssm:GetParameter",
                "ssm:GetParameters",
                "ssm:ListAssociations",
                "ssm:ListInstanceAssociations",
                "ssm:PutInventory",
                "ssm:GetParametersByPath"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "ParameterStoreAccess",
        "Roles": [
          {
            "Ref": "ServiceRoleForEC2Instances"
          }
        ]
      }
    },
    "CodeBuildPolicyRequirements": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": ["PipelineLogs","Arn"]
                }
              ],
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ]
            },
            {
              "Effect": "Allow",
              "Resource": [{"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},
                {"Fn::Join": ["",[ {"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},"/*" ]]}],
              "Action": [
                "s3:PutObject",
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetBucketAcl",
                "s3:GetBucketLocation"
              ]
            },
            {
              "Effect": "Allow",
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Resource": [
                {
                  "Fn::GetAtt": ["PipelineLogs","Arn"]
                }
              ]
            },
            {
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": ["PipelineLogs","Arn"]
                }
              ],
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ]
            }
          ]
        },
        "PolicyName": "CodeBuildPolicyRequirements",
        "Roles": [
          {
            "Ref": "ServiceRoleForCodeBuild"
          }
        ]
      }
    },
    "CodePipelinePolicyRequirements": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "iam:PassRole"
              ],
              "Resource": "*",
              "Effect": "Allow",
              "Condition": {
                "StringEqualsIfExists": {
                  "iam:PassedToService": [
                    "cloudformation.amazonaws.com",
                    "elasticbeanstalk.amazonaws.com",
                    "ec2.amazonaws.com",
                    "ecs-tasks.amazonaws.com"
                  ]
                }
              }
            },
            {
              "Action": [
                "codecommit:CancelUploadArchive",
                "codecommit:GetBranch",
                "codecommit:GetCommit",
                "codecommit:GetRepository",
                "codecommit:GetUploadArchiveStatus",
                "codecommit:UploadArchive"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codedeploy:CreateDeployment",
                "codedeploy:GetApplication",
                "codedeploy:GetApplicationRevision",
                "codedeploy:GetDeployment",
                "codedeploy:GetDeploymentConfig",
                "codedeploy:RegisterApplicationRevision"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codestar-connections:UseConnection"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "elasticbeanstalk:*",
                "ec2:*",
                "elasticloadbalancing:*",
                "autoscaling:*",
                "cloudwatch:*",
                "sns:*",
                "cloudformation:*",
                "rds:*",
                "sqs:*",
                "ecs:*"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "s3:*"
              ],
              "Resource": {"Fn::GetAtt": ["SimpleAWSS3BuildDeployArtefacts", "Arn"]},
              "Effect": "Allow"
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:ListFunctions"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "opsworks:CreateDeployment",
                "opsworks:DescribeApps",
                "opsworks:DescribeCommands",
                "opsworks:DescribeDeployments",
                "opsworks:DescribeInstances",
                "opsworks:DescribeStacks",
                "opsworks:UpdateApp",
                "opsworks:UpdateStack"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "cloudformation:CreateStack",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeStacks",
                "cloudformation:UpdateStack",
                "cloudformation:CreateChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:SetStackPolicy",
                "cloudformation:ValidateTemplate"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Action": [
                "codebuild:BatchGetBuilds",
                "codebuild:StartBuild",
                "codebuild:BatchGetBuildBatches",
                "codebuild:StartBuildBatch"
              ],
              "Resource": "*",
              "Effect": "Allow"
            },
            {
              "Effect": "Allow",
              "Action": [
                "devicefarm:ListProjects",
                "devicefarm:ListDevicePools",
                "devicefarm:GetRun",
                "devicefarm:GetUpload",
                "devicefarm:CreateUpload",
                "devicefarm:ScheduleRun"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "servicecatalog:ListProvisioningArtifacts",
                "servicecatalog:CreateProvisioningArtifact",
                "servicecatalog:DescribeProvisioningArtifact",
                "servicecatalog:DeleteProvisioningArtifact",
                "servicecatalog:UpdateProduct"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "cloudformation:ValidateTemplate"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "ecr:DescribeImages"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "states:DescribeExecution",
                "states:DescribeStateMachine",
                "states:StartExecution"
              ],
              "Resource": "*"
            },
            {
              "Effect": "Allow",
              "Action": [
                "appconfig:StartDeployment",
                "appconfig:StopDeployment",
                "appconfig:GetDeployment"
              ],
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "CodePipelinePolicyRequirements",
        "Roles": [
          {
            "Ref": "ServiceRoleForCodePipeline"
          }
        ]
      }
    },
    "SomePoliciesForCodeDeploy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "autoscaling:CompleteLifecycleAction",
                "autoscaling:DeleteLifecycleHook",
                "autoscaling:DescribeAutoScalingGroups",
                "autoscaling:DescribeLifecycleHooks",
                "autoscaling:PutLifecycleHook",
                "autoscaling:RecordLifecycleActionHeartbeat",
                "autoscaling:CreateAutoScalingGroup",
                "autoscaling:UpdateAutoScalingGroup",
                "autoscaling:EnableMetricsCollection",
                "autoscaling:DescribePolicies",
                "autoscaling:DescribeScheduledActions",
                "autoscaling:DescribeNotificationConfigurations",
                "autoscaling:SuspendProcesses",
                "autoscaling:ResumeProcesses",
                "autoscaling:AttachLoadBalancers",
                "autoscaling:AttachLoadBalancerTargetGroups",
                "autoscaling:PutScalingPolicy",
                "autoscaling:PutScheduledUpdateGroupAction",
                "autoscaling:PutNotificationConfiguration",
                "autoscaling:PutWarmPool",
                "autoscaling:DescribeScalingActivities",
                "autoscaling:DeleteAutoScalingGroup",
                "ec2:DescribeInstances",
                "ec2:DescribeInstanceStatus",
                "ec2:TerminateInstances",
                "tag:GetResources",
                "sns:Publish",
                "cloudwatch:DescribeAlarms",
                "cloudwatch:PutMetricAlarm",
                "elasticloadbalancing:DescribeLoadBalancers",
                "elasticloadbalancing:DescribeInstanceHealth",
                "elasticloadbalancing:RegisterInstancesWithLoadBalancer",
                "elasticloadbalancing:DeregisterInstancesFromLoadBalancer",
                "elasticloadbalancing:DescribeTargetGroups",
                "elasticloadbalancing:DescribeTargetHealth",
                "elasticloadbalancing:RegisterTargets",
                "elasticloadbalancing:DeregisterTargets"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ]
        },
        "PolicyName": "SomePoliciesForCodeDeploy",
        "Roles": [
          {
            "Ref": "ServiceRoleForCodeDeploy"
          }
        ]
      }
    },
    "ServiceRoleForEC2Instances": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    
    "ServiceRoleForEC2InstancesInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "InstanceProfileName": "ServiceRoleForEC2InstancesInstanceProfile",
        "Roles": [
          {
            "Ref": "ServiceRoleForEC2Instances"
          }
        ],
        "Path": "/"
      }
    },
    
    "ServiceRoleForCodeBuild": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    "ServiceRoleForCodeDeploy": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codedeploy.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    },
    
    "ServiceRoleForCodePipeline": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "codepipeline.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        }
      }
    }
  },
  
  "Outputs": {
    "SimpleAWSS3BuildDeployArtefacts":{
      "Description": "S3 Artefact Bucket.",
      "Value": {"Ref": "SimpleAWSS3BuildDeployArtefacts"},
      "Export": {
        "Name": { "Fn::Join" :  [ "-", [{"Ref": "AWS::StackName"}, "SimpleAWSS3BuildDeployArtefacts"]]}
      }
    },
    "ServiceRoleForEC2Instances":{
      "Description": "EC2 Instance Role.",
      "Value": {"Ref": "ServiceRoleForEC2Instances"},
      "Export": {
        "Name": { "Fn::Join" :  [ "-", [{"Ref": "AWS::StackName"}, "ServiceRoleForEC2Instances"]]}
      }
    },
    "ServiceRoleForCodeDeploy":{
        "Description": "Code Deploy Service Role to access S3 Read/Write",
        "Value": {"Ref": "ServiceRoleForCodeDeploy"},
        "Export": {
        "Name": { "Fn::Join" :  [ "-", [{"Ref": "AWS::StackName"}, "ServiceRoleForCodeDeploy"]]}
      }
    },
    "ServiceRoleForCodeBuild":{
        "Description": "Code Build Service Role to access S3 Read/Write",
        "Value": {"Ref": "ServiceRoleForCodeBuild"},
        "Export": {
        "Name": { "Fn::Join" :  [ "-", [{"Ref": "AWS::StackName"}, "ServiceRoleForCodeBuild"]]}
      }
    },
    "ServiceRoleForCodePipeline":{
      "Description": "Code Pipeline Service Role",
      "Value": {"Ref": "ServiceRoleForCodePipeline"},
      "Export": {
        "Name": { "Fn::Join" :  [ "-", [{"Ref": "AWS::StackName"}, "ServiceRoleForCodePipeline"]]}
      }
    },
    "ServiceRoleForEC2InstancesInstanceProfile": {
      "Description": "InstanceProfile for the EC2 Instance Service Role",
      "Value": {"Ref": "ServiceRoleForEC2InstancesInstanceProfile"},
      "Export": {
        "Name": {"Fn::Join":["-",[{"Ref": "AWS::StackName"}, "ServiceRoleForEC2InstancesInstanceProfile"]] }
      }
    }
  }
}